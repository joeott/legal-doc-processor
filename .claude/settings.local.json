{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(python:*)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(ls:*)",
      "Bash(dpkg:*)",
      "Bash(apt list:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(cp:*)",
      "Bash(sed:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(sudo supervisorctl:*)",
      "Bash(mv:*)",
      "Bash(PYTHONPATH=/opt/legal-doc-processor python scripts/tests/test_schema_alignment.py)",
      "Bash(PYTHONPATH=/opt/legal-doc-processor python3 scripts/tests/test_schema_alignment.py)",
      "Bash(pip3 install:*)",
      "Bash(PYTHONPATH=/opt/legal-doc-processor python3 scripts/tests/process_single_document.py \"/opt/legal-doc-processor/input_docs/Paul, Michael (Acuity)/Paul, Michael - Wombat Corp Disclosure Stmt 10-23-24.pdf\")",
      "Bash(git add:*)",
      "Bash(gh auth:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(git remote set-url:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(DEPLOYMENT_STAGE=3 python3 scripts/check_database_state.py)",
      "Bash(rm:*)",
      "Bash(sudo cp:*)",
      "Bash(PYTHONPATH=:*)",
      "Bash(/usr/bin/python3:*)",
      "Bash(export PYTHONPATH=/opt/legal-doc-processor)",
      "Bash(/opt/legal-doc-processor/venv/bin/python:*)",
      "Bash(journalctl:*)",
      "Bash(git stash push:*)",
      "Bash(. venv/bin/activate)",
      "Bash(awk:*)",
      "Bash(celery -A scripts.celery_app inspect registered)",
      "Bash(echo:*)",
      "Bash(export USE_MINIMAL_MODELS=true)",
      "Bash(export SKIP_CONFORMANCE_CHECK=true)",
      "Bash(USE_MINIMAL_MODELS=true SKIP_CONFORMANCE_CHECK=true python3 scripts/tests/test_minimal_models.py)",
      "Bash(bash:*)",
      "Bash(sudo tail:*)",
      "Bash(sudo mkdir:*)",
      "Bash(sudo service:*)",
      "Bash(sudo systemctl status:*)",
      "Bash(sudo journalctl:*)",
      "Bash(sudo rm:*)",
      "Bash(sudo systemctl:*)",
      "Bash(export:*)",
      "Bash(celery -A scripts.celery_app inspect active)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(git tag:*)",
      "Bash(env)",
      "Bash(celery:*)",
      "Bash(# Kill existing workers\npkill -f \"celery.*worker\"\nsleep 2\n\n# Start a worker that listens to all queues\nsource load_env.sh && nohup celery -A scripts.celery_app worker --loglevel=info --queues=default,ocr,text,entity,graph,cleanup > celery_worker.log 2>&1 &\n\necho \"Started new worker listening to all queues\"\nps aux | grep celery | grep -v grep)",
      "Bash(killall:*)",
      "Bash(true)",
      "Bash(pkill:*)",
      "Bash(/opt/legal-doc-processor/scripts/start_celery_worker.sh:*)",
      "Bash(timeout 20 celery:*)",
      "Bash(touch:*)",
      "Bash(redis-cli:*)",
      "Bash(aws:*)",
      "Bash(REDISCLI_AUTH=\"BHMbnJHyf&9!4TT\" redis-cli -h redis-12696.c325.us-east-1-4.ec2.redns.redis-cloud.com -p 12696 --user joe_ott FLUSHDB)",
      "Bash(REDISCLI_AUTH=\"BHMbnJHyf&9!4TT\" redis-cli -h redis-12696.c325.us-east-1-4.ec2.redns.redis-cloud.com -p 12696 --user joe_ott DBSIZE)",
      "Bash(PGPASSWORD=:*)",
      "Bash(# Kill existing workers\nps aux | grep \"[c]elery\" | awk '{print $2}' | xargs -r kill -9\n\n# Set environment\nexport ENABLE_SCANNED_PDF_DETECTION=false\nexport SKIP_PDF_PREPROCESSING=true\nexport FORCE_PROCESSING=true\nexport VALIDATION_REDIS_METADATA_LEVEL=optional\nexport VALIDATION_PROJECT_ASSOCIATION_LEVEL=optional\n\n# Start new worker with proper environment\nsource load_env.sh && nohup celery -A scripts.celery_app worker --loglevel=info --queues=default,ocr,text,entity,graph,cleanup --concurrency=4 > celery_async_test.log 2>&1 &\n\necho \"Worker restarted with async-only configuration\")",
      "Bash(timeout:*)",
      "Bash(pip show:*)",
      "Bash(rg:*)",
      "Bash(jq:*)",
      "Bash(git rm:*)",
      "Bash(test -f .env)",
      "Bash(DEPLOYMENT_STAGE=2 SKIP_CONFORMANCE_CHECK=true python3 verify_fixes.py)",
      "Bash(DEPLOYMENT_STAGE=3 SKIP_CONFORMANCE_CHECK=true python3 verify_fixes.py)",
      "Bash(DEPLOYMENT_STAGE=3 SKIP_CONFORMANCE_CHECK=true DATABASE_URL=\"postgresql://app_user:LegalDoc2025%5C%21Secure@database1.cuviucyodbeg.us-east-1.rds.amazonaws.com:5432/legal_doc_processing?sslmode=require\" python3 verify_fixes.py)",
      "Bash(./start_all_workers.sh:*)",
      "Bash(./monitor_workers.sh:*)",
      "Bash(./scripts/monitoring/monitor_workers.sh:*)",
      "Bash(psql:*)"
    ],
    "deny": []
  }
}