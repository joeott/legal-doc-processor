{
  "summary": {
    "document_uuid": "FAILED",
    "start_time": "2025-06-09T21:52:33.190168",
    "total_duration": 0.337795,
    "total_events": 10,
    "total_errors": 1,
    "redis_acceleration": true,
    "cache_stats": {
      "hits": 0,
      "misses": 12,
      "writes": 0
    }
  },
  "events": [
    {
      "timestamp": "2025-06-09T21:52:33.190202",
      "elapsed_seconds": 3.4e-05,
      "stage": "Pipeline Start",
      "event": "Processing document: Paul, Michael - Lora Prop Disclosure Stmt 10-21-24.pdf",
      "details": {
        "file_path": "input_docs/Paul, Michael (Acuity)/Paul, Michael - Lora Prop Disclosure Stmt 10-21-24.pdf",
        "file_size": 149104,
        "redis_acceleration": true
      }
    },
    {
      "timestamp": "2025-06-09T21:52:33.225173",
      "elapsed_seconds": 0.035005,
      "stage": "Project Creation",
      "event": "Project created successfully",
      "details": {
        "project_id": 4,
        "project_uuid": "1f5a41ea-f8dd-433f-8593-e376b9936d35"
      }
    },
    {
      "timestamp": "2025-06-09T21:52:33.225374",
      "elapsed_seconds": 0.035206,
      "stage": "S3 Upload",
      "event": "Starting S3 upload",
      "details": {}
    },
    {
      "timestamp": "2025-06-09T21:52:33.455832",
      "elapsed_seconds": 0.265664,
      "stage": "S3 Upload",
      "event": "Upload completed",
      "details": {
        "document_uuid": "c93ca1b3-2368-4753-9cc3-666c31acafe9",
        "s3_bucket": "samu-docs-private-upload",
        "s3_key": "documents/c93ca1b3-2368-4753-9cc3-666c31acafe9.pdf",
        "file_size": 149104
      }
    },
    {
      "timestamp": "2025-06-09T21:52:33.455968",
      "elapsed_seconds": 0.2658,
      "stage": "Database",
      "event": "Creating document record",
      "details": {}
    },
    {
      "timestamp": "2025-06-09T21:52:33.472726",
      "elapsed_seconds": 0.282558,
      "stage": "Database",
      "event": "Document record created",
      "details": {
        "document_id": 1,
        "document_uuid": "c93ca1b3-2368-4753-9cc3-666c31acafe9"
      }
    },
    {
      "timestamp": "2025-06-09T21:52:33.479274",
      "elapsed_seconds": 0.289106,
      "stage": "Redis Cache",
      "event": "Initial cache state",
      "details": {
        "OCR": false,
        "Chunks": false,
        "Entities": false,
        "Canonical": false,
        "Resolved": false,
        "State": false
      }
    },
    {
      "timestamp": "2025-06-09T21:52:33.479567",
      "elapsed_seconds": 0.289399,
      "stage": "OCR",
      "event": "Submitting OCR task to Celery",
      "details": {}
    },
    {
      "timestamp": "2025-06-09T21:52:33.517565",
      "elapsed_seconds": 0.327397,
      "stage": "OCR",
      "event": "Task submitted",
      "details": {
        "task_id": "39348a0f-5424-42b9-9945-703e29e1f987",
        "queue": "ocr"
      }
    },
    {
      "timestamp": "2025-06-09T21:52:33.517770",
      "elapsed_seconds": 0.327602,
      "stage": "Monitoring",
      "event": "Starting pipeline monitoring",
      "details": {}
    }
  ],
  "errors": [
    {
      "timestamp": "2025-06-09T21:52:33.524532",
      "stage": "Pipeline",
      "error": "Fatal error during processing",
      "exception": "Column expression, FROM clause, or other columns clause element expected, got <class 'scripts.models.SourceDocumentMinimal'>.",
      "traceback": "Traceback (most recent call last):\n  File \"/opt/legal-doc-processor/monitor_full_pipeline.py\", line 337, in process_document\n    db_state = self.check_database_state(document_uuid)\n  File \"/opt/legal-doc-processor/monitor_full_pipeline.py\", line 119, in check_database_state\n    doc = session.query(SourceDocumentMinimal).filter_by(\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 2955, in query\n    return self._query_cls(entities, self, **kwargs)\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/orm/query.py\", line 276, in __init__\n    self._set_entities(entities)\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/orm/query.py\", line 288, in _set_entities\n    self._raw_columns = [\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/orm/query.py\", line 289, in <listcomp>\n    coercions.expect(\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/sql/coercions.py\", line 395, in expect\n    resolved = impl._literal_coercion(\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/sql/coercions.py\", line 634, in _literal_coercion\n    self._raise_for_expected(element, argname)\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/sql/coercions.py\", line 1132, in _raise_for_expected\n    return super()._raise_for_expected(\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/sql/coercions.py\", line 695, in _raise_for_expected\n    super()._raise_for_expected(\n  File \"/home/ubuntu/.local/lib/python3.10/site-packages/sqlalchemy/sql/coercions.py\", line 518, in _raise_for_expected\n    raise exc.ArgumentError(msg, code=code) from err\nsqlalchemy.exc.ArgumentError: Column expression, FROM clause, or other columns clause element expected, got <class 'scripts.models.SourceDocumentMinimal'>.\n"
    }
  ]
}